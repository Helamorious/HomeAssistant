# https://www.home-assistant.io/integrations/ring/

# Physical Things
# * Ring Video Doorbell - 'Front Door'

# Apply customizations for HA UI
homeassistant:
  customize:
    # Hide the intermediary objects for Doorbell press automations
    automation.ring_download_complete:
      hidden: true
    automation.ring_download_processed:
      hidden: true
    automation.front_door_lastvideo:
      hidden: true

# Enable the Ring integration
ring:
  username: !secret ring_user
  password: !secret ring_pass

camera:
  # Create a camera instance for processing a local file
  - platform: ffmpeg
    name: front_door_lastvideo
    input: "/config/tmp/front_door.mp4"
    # The Ring camera takes a couple of seconds to fade in
    extra_arguments: "-ss 00:03"
    
downloader:
  # Enable the downloader integration
  #  This is used to download cloud video files in the DOORBELL PRESS automation flows
  download_dir: /config/tmp/

image_processing:
  # Create a tensorflow instance for person detection
  #  This is used by the DOORBELL PRESS automation flows
  - platform: tensorflow
    scan_interval: 10000
    source:
      - entity_id: camera.front_door_lastvideo
    file_out:
      # Generate a still image and overwrite latest when a person is detected
      - "/config/tmp/{{ camera_entity.split('.')[1] }}_latest.jpg"
      # Note; in future we may wish to keep a record of all detected people...
      - "/config/tmp/{{ camera_entity.split('.')[1] }}_{{ now().strftime('%Y%m%d_%H%M%S') }}.jpg"
    model:
      # Configure the tensorflow learning data
      graph: /config/tensorflow/model/
      categories:
        - person

automation:
# DOORBELL PRESS
# This automation flow is intended to allow for facial recognition on the Ring video when the
# doorbell is pressed. This is done in three parts to allow reacting to the completion of the
# downlaod, and completion of the TensorFlow image processing.

# DOORBELL PRESS - Part 1 of 3
# When someone presses the doorbell
#  Send a notification to Discord, and
#  Download the associated video from the Ring cloud service
- id: doorbell_press
  alias: 'Doorbell Press'
  initial_state: on
  trigger:
    - entity_id: binary_sensor.front_door_ding
      platform: state
      from: 'off'
      to: 'on'
  action:
    - service: system_log.write
      data_template:
        message: "{{trigger.event_data.entity_id}} triggered."
        level: info
    - service: notify.discord
      data:
        target: !secret discord_channel
        message: '[NOTIFY] Ding Dong. Someones at the door.'
    - delay: 5
    - service: downloader.download_file
      data_template:
        url: "{{ state_attr('camera.front_door', 'video_url') }}"
        filename: "front_door.mp4"
        overwrite: yes

# DOORBELL PRESS - Part 2 of 3
# When a Ring video is finished downloading
#  Pass it to the Tensorflow image processor
- id: ring_download_complete
  alias: 'Doorbell Video Download Complete'
  initial_state: on
  trigger:
    - platform: event
      event_type: downloader_download_completed
      event_data:
        filename: front_door.mp4
  action:
    - service: system_log.write
      data_template:
        message: "{{trigger.event_data.entity_id}} triggered."
        level: info
    - service: image_processing.scan
      data:
        entity_id: image_processing.tensorflow_front_door_lastvideo

# DOORBELL PRESS - Part 3 of 3
# When TensorFlow identifies a person within the video
#  Send a notification to Discord with the image of the detected face attached
- id: ring_download_processed
  alias: 'Doorbell Video Person Detected'
  initial_state: on
  trigger:
    - platform: event
      event_type: image_processing.detect_face
      event_data:
        entity_id: image_processing.tensorflow_front_door_lastvideo
  action:
    - service: system_log.write
      data_template:
        message: "{{trigger.event_data.entity_id}} triggered."
        level: info
    - service: notify.discord
      data:
        target: !secret discord_channel
        message: '[NOTIFY] Person Detected.'
        data_template:
          images:
          - "/config/tmp/{{trigger.event_data.entity_id.split('.')[1]}}_latest.jpg"